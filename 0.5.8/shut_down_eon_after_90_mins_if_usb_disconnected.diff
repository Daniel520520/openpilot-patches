 selfdrive/thermald.py | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/selfdrive/thermald.py b/selfdrive/thermald.py
index fea5a896..c281a5d8 100755
--- a/selfdrive/thermald.py
+++ b/selfdrive/thermald.py
@@ -83,7 +83,8 @@ _TEMP_THRS_L = [42.5, 57.5, 72.5, 10000]
 _FAN_SPEEDS = [0, 16384, 32768, 65535]
 # max fan speed only allowed if battery is hot
 _BAT_TEMP_THERSHOLD = 45.
-
+# shutdown timer 90 mins (60 x 90)
+_SHUTDOWN_AT = 5400
 
 def handle_fan(max_cpu_temp, bat_temp, fan_speed):
   new_speed_h = next(speed for speed, temp_h in zip(_FAN_SPEEDS, _TEMP_THRS_H) if temp_h > max_cpu_temp)
@@ -165,6 +166,7 @@ def thermald_thread():
   location_sock = messaging.sub_sock(context, service_list['gpsLocation'].port)
   fan_speed = 0
   count = 0
+  shutdown_count = 0
 
   off_ts = None
   started_ts = None
@@ -301,6 +303,15 @@ def thermald_thread():
     thermal_sock.send(msg.to_bytes())
     print msg
 
+
+    # shut down EON if usb is not present after certain time
+    if not msg.thermal.usbOnline:
+      shutdown_count += 1
+    else:
+      shutdown_count = 0
+    if shutdown_count >= _SHUTDOWN_AT:
+      os.system('LD_LIBRARY_PATH="" svc power shutdown')
+
     # report to server once per minute
     if (count%60) == 0:
       cloudlog.event("STATUS_PACKET",
